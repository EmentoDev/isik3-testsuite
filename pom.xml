<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.gematik</groupId>
    <artifactId>tiger-integration-isik-stufe-3</artifactId>
    <version>1.2.0</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <tiger.version>3.7.9</tiger.version>
        <tiger.fhir.version>1.2.8</tiger.fhir.version>
        <tiger-cloud-extension.version>3.7.6</tiger-cloud-extension.version>
        <junit5.version>5.11.4</junit5.version>
        <spotless-maven-plugin.version>2.44.3</spotless-maven-plugin.version>
        <spotless.google-java-format.version>1.18.1</spotless.google-java-format.version>
        <lombok.version>1.18.36</lombok.version>
        <logback.version>1.5.17</logback.version>
        <maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
        <maven-failsafe-plugin.version>3.5.2</maven-failsafe-plugin.version>
        <license-maven-plugin.version>2.5.0</license-maven-plugin.version>
        <ospo-resources.version>1.3.0</ospo-resources.version>
        <properties-maven-plugin.version>1.2.1</properties-maven-plugin.version>
        <junit-platform-engine.version>1.9.3</junit-platform-engine.version>
        <exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>
    </properties>

    <profiles>
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <tiger-configuration-yaml>tiger.yaml</tiger-configuration-yaml>
                <testFailureIgnore>false</testFailureIgnore>
            </properties>
        </profile>
        <profile>
            <id>jenkins</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <tiger-configuration-yaml>tiger-ci.yaml</tiger-configuration-yaml>
                <testFailureIgnore>false</testFailureIgnore>
            </properties>
        </profile>
        <profile>
            <id>validate-test-report</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${exec-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>validate-report</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>de.gematik.test.tiger.validator.MainZipsValidatorChecker</mainClass>
                                    <arguments>
                                        <!-- To be set via command line or in Jenkins -->
                                        <!--suppress UnresolvedMavenProperty -->
                                        <argument>${validate-report.bundle}</argument>
                                        <!--suppress UnresolvedMavenProperty -->
                                        <argument>${validate-report.report}</argument>
                                    </arguments>
                                    <executableDependency>
                                        <groupId>de.gematik.test</groupId>
                                        <artifactId>tiger-testsuite-validator</artifactId>
                                    </executableDependency>
                                    <includePluginDependencies>true</includePluginDependencies>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>de.gematik.test</groupId>
                                <artifactId>tiger-testsuite-validator</artifactId>
                                <version>RELEASE</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- This profile is meant to create a feature bundle zip archive for upload to Titus.
             The zip will contain all feature files and the pom.xml

             To run it issue: mvn -P pack-bundle-zip
             ZIP file will be located in the target folder
        -->
        <profile>
            <id>pack-bundle-zip</id>
            <build>
                <defaultGoal>clean initialize</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${maven-assembly-plugin.version}</version>
                        <executions>
                            <execution>
                                <configuration>
                                    <appendAssemblyId>true</appendAssemblyId>
                                    <descriptors>
                                        <descriptor>src/test/assembly/zip-feature-bundle-basis.xml</descriptor>
                                    </descriptors>
                                </configuration>
                                <id>zip-feature-bundle-basis</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                            <execution>
                                <configuration>
                                    <appendAssemblyId>true</appendAssemblyId>
                                    <descriptors>
                                        <descriptor>src/test/assembly/zip-feature-bundle-dokumentenaustausch.xml</descriptor>
                                    </descriptors>
                                </configuration>
                                <id>zip-feature-bundle-dokumentenaustausch</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                            <execution>
                                <configuration>
                                    <appendAssemblyId>true</appendAssemblyId>
                                    <descriptors>
                                        <descriptor>src/test/assembly/zip-feature-bundle-medikation.xml</descriptor>
                                    </descriptors>
                                </configuration>
                                <id>zip-feature-bundle-medikation</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                            <execution>
                                <configuration>
                                    <appendAssemblyId>true</appendAssemblyId>
                                    <descriptors>
                                        <descriptor>src/test/assembly/zip-feature-bundle-terminplanung.xml</descriptor>
                                    </descriptors>
                                </configuration>
                                <id>zip-feature-bundle-terminplanung</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                            <execution>
                                <configuration>
                                    <appendAssemblyId>true</appendAssemblyId>
                                    <descriptors>
                                        <descriptor>src/test/assembly/zip-feature-bundle-vitalparameter.xml</descriptor>
                                    </descriptors>
                                </configuration>
                                <id>zip-feature-bundle-vitalparameter</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>all</id>
            <properties>
                <TESTS_TO_RUN>@Basis or @Medikation or @Dokumentenaustausch or @Vitalparameter or @Terminplanung</TESTS_TO_RUN>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>de.gematik.test</groupId>
            <artifactId>tiger-test-lib</artifactId>
            <version>${tiger.version}</version>
        </dependency>
        <dependency>
            <groupId>de.gematik.test.tiger</groupId>
            <artifactId>tiger-on-fhir</artifactId>
            <version>${tiger.fhir.version}</version>
        </dependency>
        <dependency>
            <groupId>de.gematik</groupId>
            <artifactId>tiger-cloud-extension</artifactId>
            <version>${tiger-cloud-extension.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>de.gematik.test</groupId>
                <artifactId>tiger-maven-plugin</artifactId>
                <version>${tiger.version}</version>
                <executions>
                    <execution>
                        <configuration>
                            <glues>
                                <glue>de.gematik.test.tiger.glue</glue>
                                <glue>de.gematik.glue</glue>
                            </glues>
                            <!--suppress UnresolvedMavenProperty -->
                            <driverClassName>TestDriver${ctr}IT</driverClassName>
                        </configuration>
                        <phase>generate-test-sources</phase>
                        <id>generate-tiger-drivers</id>
                        <goals>
                            <goal>generate-drivers</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate-tiger-report</id>
                        <goals>
                            <goal>
                                generate-serenity-reports
                            </goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <testFailureIgnore>${testFailureIgnore}</testFailureIgnore>
                    <forkedProcessExitTimeoutInSeconds>18000</forkedProcessExitTimeoutInSeconds>
                    <includes>
                        <include>**/TestDriver*IT.java</include>
                    </includes>
                    <systemPropertyVariables>
                        <cucumber.filter.tags>
                            ${TESTS_TO_RUN}
                        </cucumber.filter.tags>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <TIGER_TESTENV_CFGFILE>${tiger-configuration-yaml}</TIGER_TESTENV_CFGFILE>
                    </environmentVariables>
                </configuration>
                <!-- The following dependencies are listed explicitly so that they can be downloaded for offline-use by docker build -->
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit-platform</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-engine</artifactId>
                        <version>${junit-platform-engine.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-commons</artifactId>
                        <version>${junit-platform-engine.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-launcher</artifactId>
                        <version>${junit-platform-engine.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>true</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/test/assembly/zip-debug-report.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <execution>
                        <id>zip-test-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>true</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/test/assembly/zip-test-report.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>auto-style</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <!-- Using validate phase, so this happens before enforce-style -->
                        <phase>none</phase>
                    </execution>
                </executions>
                <configuration>
                    <formats>
                        <!-- you can define as many formats as you want, each is independent -->
                        <format>
                            <!-- define the files to apply to -->
                            <includes>
                                <include>**/*.yml</include>
                            </includes>
                            <excludes>
                                <exclude>**/target/**/*</exclude>
                            </excludes>
                            <!-- define the steps to apply to those files -->
                            <trimTrailingWhitespace/>
                            <endWithNewline/>
                            <indent>
                                <spaces>true</spaces>
                                <spacesPerTab>2</spacesPerTab>
                            </indent>
                        </format>
                    </formats>
                    <java>
                        <toggleOffOn/>
                        <googleJavaFormat>
                            <version>${spotless.google-java-format.version}</version>
                            <style>GOOGLE</style>
                            <reflowLongStrings>true</reflowLongStrings>
                        </googleJavaFormat>
                    </java>
                    <groovy>
                        <includes>
                            <include>**/*.Jenkinsfile</include>
                        </includes>
                        <importOrder/>
                    </groovy>
                    <markdown>
                        <includes>
                            <include>**/*.md</include>
                        </includes>
                        <excludes>
                            <exclude>**/target/**/*</exclude>
                        </excludes>
                    </markdown>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${license-maven-plugin.version}</version>
                <configuration>
                    <licenseName>apache_v2_0</licenseName>
                    <licenseResolver>classpath://copyright-header/apache-license</licenseResolver>
                    <inceptionYear>2025</inceptionYear>
                    <organizationName>gematik GmbH</organizationName>

                    <licensesOutputDirectory>${project.basedir}/third-party-licenses</licensesOutputDirectory>
                    <licensesOutputFile>${project.basedir}/third-party-licenses/licenses.xml</licensesOutputFile>
                    <forceDownload>false</forceDownload>

                    <failOnMissingHeader>true</failOnMissingHeader>
                    <failOnNotUptodateHeader>true</failOnNotUptodateHeader>
                    <canUpdateCopyright>true</canUpdateCopyright>
                    <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>

                    <includes>
                        <include>**/*.java</include>
                        <include>**/*.xml</include>
                    </includes>
                    <excludes>
                        <exclude>**/generated/**</exclude>
                    </excludes>
                </configuration>

                <dependencies>
                    <dependency>
                        <groupId>de.gematik</groupId>
                        <artifactId>ospo-resources</artifactId>
                        <version>${ospo-resources.version}</version>
                    </dependency>
                </dependencies>

                <executions>
                    <!-- Update der Source-Header -->
                    <execution>
                        <id>update-file-header</id>
                        <goals>
                            <goal>update-file-header</goal>
                        </goals>
                    </execution>

                    <!-- Check der Source-Header -->
                    <execution>
                        <id>check-file-header</id>
                        <goals>
                            <goal>check-file-header</goal>
                        </goals>
                    </execution>

                    <!-- Download der transitiven Lizenzen -->
                    <execution>
                        <id>download-licenses</id>
                        <goals>
                            <goal>download-licenses</goal>
                        </goals>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>${properties-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <useDefaultValues>true</useDefaultValues>
                            <files>
                                <file>${project.basedir}/.env</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <defaultGoal>clean verify</defaultGoal>
    </build>
</project>
